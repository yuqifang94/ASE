C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:10,replace = F)
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
t
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=floor(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:5,replace = F)
merge_sort(t)
t
t=sample(1:3,replace = F)
merge_sort(t)
floor(1.5)
merge(1,c(2,3),3)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
return(c(C,B[j:length(B)]))
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
return(c(C,A[i:length(A)]))
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
}
merge(t)
merge(1,c(2,3),3)
merge(1,c(2,3,4),3)
merge(1,c(5,2,3,4),3)
merge_sort(t)
t
t=sample(1:5,replace = F)
merge_sort(t)
t
t=
merge_sort(sample(1:10,replace = F))
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:100,replace = F))
merge_sort(sample(1:1000,replace = F))
system.time{merge_sort(sample(1:1000,replace = F))}
system.time(merge_sort(sample(1:1000,replace = F)))
system.time(merge_sort(sample(1:10000,replace = F)))
system.time(merge_sort(sample(1:100000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:500000,replace = F)))
system.time(merge_sort(sample(1:500000,replace = F)))
t=cor.test(x=1:10,y=1:10)
t$estimate
t
t=cor.test(1:10,1:10)
t$statistic
t$estimate
cor_out=data.frame()
UC_matrix_sub_out=list()
?quantile
?cor.test
?diff
?setdiff
A <- c("A", "B", "C", "D")
B <- c("A", "B", "C")
# to find difference
setdiff(A, B)
library(data.table)
?fread
grepl
?grepl
?data.table
?reduece
library(rtracklayer)
?reduce
?grep
source('D:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mainFunctions_sub.R')
?getSeq
?shift
paste0(c("1","2"),c("3","4"))
str_count
library(stringr)
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=("CAG","CCG","AGC")))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")))
data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
t=data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")),"CG")
t
t[,str_count(pattern="CG")]
t[,str_count(ref,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2=t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
rowmeans(t2)
rowMeans(t2)
rowSums(t2)
1318389-5184401
?matchPattern
?matchPattern
dev.off()
library(Gviz)
data(geneModels)
geneModels
typeof(geneModels)
?GeneRegionTrack
TxDb.Mmusculus.UCSC.mm10.knownGene
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
Mus.musculus
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene)
t
?plotTracks
plotTracks(t,chromosome="chr12",from=72365952,to=72366201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72371201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72376201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=15458061 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=164578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154598611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
TxDb.Mmusculus.UCSC.mm10.knownGene
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
genes(TxDb.Mmusculus.UCSC.mm10.knownGene)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , geneSymbol=TRUE)
?plotTracks
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  exonAnnotation = "exon")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Gviz")
columns(txdb)
txdb=TxDb.Mmusculus.UCSC.mm10.knownGene
columns(txdb)
txdb[,"TXNAME"]
ttxdb
txdb
genes(txdb, columns=c("TXID", "TXNAME", "GENEID"))
genes(txdb, columns=c("TXID", "TXNAME", "gene"))
genes(txdb, columns=c("TXID", "TXNAME", "EXONNAME"))
symbol(t)
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE,showId=TRUE)
library(org.Mm.eg.db)
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
gene(txdb)
genes(txdb)
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
mapIds(org.Mm.eg, genes(txdb))
symbols <- unlist(mapIds(org.Mm.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb)$gene_id, "SYMBOL", "ENTREZID", multiVals = "first"))
symbols
symbol(txTranscripts_v1) <- symbols[gene(txTranscripts_v1)]
symbol(t) <- symbols[gene(t)]
t
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
symbol(t)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "symbol")
stars.pval
library(pander)
install.packages('pander')
?strsplit
8.5/11
4/3
3/4
?ecdf
cbindlist
setDT
library(data.table)
setDT
?setDT
cbindlist
data.table::rbindlist
data.table:::cbind.data.table()
?data.table:::cbind.data.table
data.table:::cbind.data.table
400*5000
3000000/5000
seq(1,12,1)/12
seq(1,12,1)/12*100
?max.col
setwd("~/")
source('H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mouse_GO_analysis.R')
25*240*0.1
25+240*0.1
25+240*0.24
492*5725/(226*6730)
226*5725/(492*6730)
1/1.851898
seq(0.001,1,0.001)
PACKAGE_MAINFOLDER
$R_HOME
help("Rprofile")
Sys.getenv(x = "PACKAGE_MAINFOLDER", unset = "", names = NA)
Sys.getenv("R_PROFILE")
Sys.getenv("R_HOME")
Sys.getenv("R_PROFILE_USER")
Sys.getenv()
options(HOME="C:\\Users\\vince\\Documents")
options(HOME="C:/Users/vince/Documents")
Sys.getenv()
Sys.getenv()[1]
gsub('\','\\', Sys.getenv()[1])
gsub("\:,"\\", Sys.getenv()[1])
gsub("\\:,"\\\", Sys.getenv()[1])
gsub("\","\\", Sys.getenv()[1])
gsub("\","\\", Sys.getenv()[1])
gsub("\\\","\\\\", Sys.getenv()[1])
Sys.getenv()[1]
gsub("C","D", Sys.getenv()[1])
gsub("\\\","\\\\", Sys.getenv()[1])
gsub("\\:\","\\\\", Sys.getenv()[1])
gsub("[\\\]","[\\\\]", Sys.getenv()[1])
grepl("[\\\]",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl(""\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\:\",Sys.getenv()[1])
grepl("1",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\",Sys.getenv()[1])
grepl('\'',Sys.getenv()[1])
grepl("\",Sys.getenv()[1],value=T)
grepl("\\\\",Sys.getenv()[1],value=T)
grepl("\\\\",Sys.getenv()[1])
Sys.getenv()[1]
gsub('\\\\','\\\\\',Sys.getenv()[1])
gsub('\\\\','\\/',Sys.getenv()[1])
gsub('\\\\','\\/',Sys.getenv())
gsub('\\\\','\\/',Sys.getenv()[1])
gsub('\\\\','\\\\\\\\',Sys.getenv()[1])
Sys.setenv(gsub('\\\\','\\\\\\\\',Sys.getenv()))
Sys.setenv(gsub('\\\\','\\\\\\\\',Sys.getenv()[1]))
languageserver_install()
install.packages("languageserversetup")
install.packages("languageserversetup")
install.packages("languageserversetup")
languageserversetup::languageserver_install()
languageserversetup::languageserver_add_to_rprofile()
languageserversetup::languageserver_add_to_rprofile()
library(lintr)
library(languageserver)
p=1/16
16*-p*log2(p)
# Density analysis using allele-specific way using regions------------------------------
GR_merge=readRDS(GR_merge_file)
GR_merge$CpGdiff=GR_merge$g1CG-GR_merge$g2CG
#CpG density vs dNME,here uses an extended density
GR_merge$dNME_relative=GR_merge$NME1-GR_merge$NME2
GR_merge$dMML_relative=GR_merge$MML1-GR_merge$MML2
source("mainFunctions_sub.R")
rm(list=ls())
setwd('../')
source("mainFunctions_sub.R")
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/Science_ASE/CpG_density")
rm(list=ls())
setwd('../')
source("mainFunctions_sub.R")
# Density analysis using allele-specific way using regions------------------------------
GR_merge=readRDS(GR_merge_file)
GR_merge$CpGdiff=GR_merge$g1CG-GR_merge$g2CG
#CpG density vs dNME,here uses an extended density
GR_merge$dNME_relative=GR_merge$NME1-GR_merge$NME2
GR_merge$dMML_relative=GR_merge$MML1-GR_merge$MML2
GR_merge_dt=convert_GR(GR_merge,'DT')
#Figure C for density
#compare allele with more CpG vs allele with fewer CpG
GR_merge_dt_CG_diff=GR_merge_dt[dNME_pval<=pval_cutoff]
GR_merge_dt_CG_diff[,`more CG`:=c(NME1,NME2)[which.max(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))][,`fewr CG`:=c(NME1,NME2)[which.min(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))]
?t.test
t.test(GR_merge_dt_CG_diff[g1CG!=g2CG]$`more CG`,GR_merge_dt_CG_diff[g1CG!=g2CG]$`fewer CG`,paired=TRUE,alternative="less")
t.test(x=GR_merge_dt_CG_diff[g1CG!=g2CG]$`more CG`,y=GR_merge_dt_CG_diff[g1CG!=g2CG]$`fewer CG`,paired=TRUE,alternative="less")
GR_merge_dt_CG_diff
GR_merge_dt_CG_diff[g1CG!=g2CG]$`fewer CG`
GR_merge_dt_CG_diff[g1CG!=g2CG]
t.test(x=GR_merge_dt_CG_diff[g1CG!=g2CG]$`more CG`,y=GR_merge_dt_CG_diff[g1CG!=g2CG]$`fewer CG`,paired=TRUE,alternative="less")
GR_merge_dt_CG_diff[,`more CG`:=c(NME1,NME2)[which.max(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))][,`fewer CG`:=c(NME1,NME2)[which.min(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))]
#Figure C for density
#compare allele with more CpG vs allele with fewer CpG
GR_merge_dt_CG_diff=GR_merge_dt[dNME_pval<=pval_cutoff]
GR_merge_dt_CG_diff[,`more CG`:=c(NME1,NME2)[which.max(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))][,`fewer CG`:=c(NME1,NME2)[which.min(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))]
t.test(x=GR_merge_dt_CG_diff[g1CG!=g2CG]$`more CG`,y=GR_merge_dt_CG_diff[g1CG!=g2CG]$`fewer CG`,paired=TRUE,alternative="less")
library(xlsx)
GO_in=read.xlsx2('../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla.xlsx')
?read.xlsx2
GO_in=read.xlsx2('../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla.xlsx',1)
GO_in
[1]
GO_in[1]
GO_in[1:2]
GO_in=as.data.table(read.xlsx('../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla.xlsx',1))
GO_in
is.na(GO_in$Description[2])
is.na(GO_in$Description[1])
for(i in 1:nrow(GO_in)){
if(!is.na(GO_in$Description[i])){GO_term=GO_in$Description[i]}
else{GO_in$Description[i]=GO_term}
}
GO_in
max(GO_in$P.value[1:10])
max(GO_in$P.value[1:10],na.rm = T)
GO_in=GO_in[,list(Description,P.value,FDR.q.value,Enrichment..N..B..n..b.,Genes)]
GO_in
as.numeric(gsub('\\(.*','',GO_in$Enrichment..N..B..n..b.))
GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('[-] Hide genes,','',paste(gsub(' - .*','',Genes)),collapse=',')),by=Description]
?paste
GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('[-] Hide genes,','',paste(gsub(' - .*','',Genes),collapse =','))),by=Description]
GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(gsub(' - .*','',Genes),collapse =','))),by=Description]
GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(unique(gsub(' - .*','',Genes)),collapse =','))),by=Description]
write.csv(GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(unique(gsub(' - .*','',Genes)),collapse =','))),by=Description],
'../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla_processed.xlsx')
write.csv(GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(unique(gsub(' - .*','',Genes)),collapse =','))),by=Description],
'../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla_processed.csv')
GO_in=GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(unique(gsub(' - .*','',Genes)),collapse =','))),by=Description]
rm(list=ls())
library(xlsx)
GO_in=as.data.table(read.xlsx('../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla.xlsx',1))
for(i in 1:nrow(GO_in)){
if(!is.na(GO_in$Description[i])){GO_term=GO_in$Description[i]}
else{GO_in$Description[i]=GO_term}
}
GO_in=GO_in[,list(P.value=max(P.value,na.rm=T),
FDR.q.value=max(FDR.q.value,na.rm=T),
Enrichment..N..B..n..b.=max(as.numeric(gsub('\\(.*','',Enrichment..N..B..n..b.)),na.rm=T),
Genes=gsub('\\[-] Hide genes,','',paste(unique(gsub(' - .*','',Genes)),collapse =','))),by=Description]
top50_gene=read.csv('../downstream/output/human_analysis/NME_motif/NME_regulaotry_Ken.xlsx')
top50_gene=read.xlsx('../downstream/output/human_analysis/NME_motif/NME_regulaotry_Ken.xlsx',1)
top50_gene
top50_gene=read.xlsx('../downstream/output/human_analysis/NME_motif/NME_regulaotry_Ken.xlsx',1,skip=1)
top50_gene
?read.xlsx
top50_gene=read.xlsx2('../downstream/output/human_analysis/NME_motif/NME_regulaotry_Ken.xlsx',1,startRow = 2)
top50_gene
strsplit(GO_in$Genes,',')
unlist(lapply(strsplit(GO_in$Genes,','),function(x) paste(x[x%in%top50_gene$Transcription.facotrs],collapse = ',')))
GO_in$Genes
top50_gene
GO_in$Genes=unlist(lapply(strsplit(GO_in$Genes,','),function(x) paste(x[x%in%top50_gene[1:50]$Transcription.facotrs],collapse = ',')))
unlist(lapply(strsplit(GO_in$Genes,','),function(x) paste(x[x%in%top50_gene[1:50,]$Transcription.facotrs],collapse = ',')))
GO_in$Genes=unlist(lapply(strsplit(GO_in$Genes,','),function(x) paste(x[x%in%top50_gene[1:50,]$Transcription.facotrs],collapse = ',')))
write.csv(GO_in,'../downstream/output/graphs_tables/regulatory_non_regulatory_GOrilla_processed.csv')
theme_glob=theme_classic()+theme(plot.title = element_text(hjust = 0.5,size=16),
axis.title.x=element_text(hjust=0.5,size=12,face="bold"),
axis.title.y=element_text(hjust=0.5,size=12,face="bold"),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=10))
rm(list=ls())
setwd('../')
source("mainFunctions_sub.R")
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/Science_ASE/CpG_density")
rm(list=ls())
setwd('../')
source("mainFunctions_sub.R")
theme_glob=theme_classic()+theme(plot.title = element_text(hjust = 0.5,size=16),
axis.title.x=element_text(hjust=0.5,size=12,face="bold"),
axis.title.y=element_text(hjust=0.5,size=12,face="bold"),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=10))
# Density analysis using allele-specific way using regions------------------------------
GR_merge=readRDS(GR_merge_file)
GR_merge$CpGdiff=GR_merge$g1CG-GR_merge$g2CG
#CpG density vs dNME,here uses an extended density
GR_merge$dNME_relative=GR_merge$NME1-GR_merge$NME2
GR_merge$dMML_relative=GR_merge$MML1-GR_merge$MML2
GR_merge_dt=convert_GR(GR_merge,'DT')
#density difference difference
GR_merge_dt$density_diff=GR_merge_dt[,(CG_allele_extend_g1-CG_allele_extend_g2)/CGcont_exp ]
#Figure C for density
#compare allele with more CpG vs allele with fewer CpG
GR_merge_dt_CG_diff=GR_merge_dt[dNME_pval<=pval_cutoff]
GR_merge_dt_CG_diff[,`more CG`:=c(NME1,NME2)[which.max(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))][,`fewer CG`:=c(NME1,NME2)[which.min(c(g1CG,g2CG))],by=seq_len(nrow(GR_merge_dt_CG_diff))]
GR_merge_dt_CG_diff_mt=melt.data.table(GR_merge_dt_CG_diff[g1CG!=g2CG,list(`more CG`,`fewer CG`)],id.vars=NULL,variable.name = "region_type",value.name="NME")
all_NME=c(GR_merge_dt_CG_diff$NME1,GR_merge_dt_CG_diff$NME2)
GR_merge_dt_CG_diff_mt=rbind(GR_merge_dt_CG_diff_mt,data.table(region_type="all",NME=all_NME))
pdf(paste0(figure_path,'CpG_number_NME_hg19_violin.pdf'),width=4,height=2)
ggplot(GR_merge_dt_CG_diff_mt,aes(x=region_type,y=NME,fill=region_type))+geom_violin()+xlab("allele type")+theme_glob+theme(legend.position = "none")
dev.off()
theme_glob=theme_classic()+theme(plot.title = element_text(hjust = 0.5,size=12),
axis.title.x=element_text(hjust=0.5,size=9,face="bold"),
axis.title.y=element_text(hjust=0.5,size=9,face="bold"),
axis.text.x=element_text(size=7),
axis.text.y=element_text(size=7))
pdf(paste0(figure_path,'CpG_number_NME_hg19_violin.pdf'),width=4,height=2)
ggplot(GR_merge_dt_CG_diff_mt,aes(x=region_type,y=NME,fill=region_type))+geom_violin()+xlab("allele type")+theme_glob+theme(legend.position = "none")
dev.off()

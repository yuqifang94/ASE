t=sample(1:10,replace = F)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l<=1){
C=x
}else{
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
}
return(C)
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:10,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
# if(i>length(A)){
#   #copy rest B to end of array
#   C=c(C,B[j:length(B)])
# } else if (j>length(B)){
#   #copy rest A to end of array
#   C=c(C,A[i:length(A)])
# }else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
#}
}
return(C)
}
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=sample(1:4,replace = F)
merge_sort(t)
t=sample(1:6,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
merge_sort(t)
t
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
merge_sort(t)
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:10,replace = F)
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
t
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=floor(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:5,replace = F)
merge_sort(t)
t
t=sample(1:3,replace = F)
merge_sort(t)
floor(1.5)
merge(1,c(2,3),3)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
return(c(C,B[j:length(B)]))
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
return(c(C,A[i:length(A)]))
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
}
merge(t)
merge(1,c(2,3),3)
merge(1,c(2,3,4),3)
merge(1,c(5,2,3,4),3)
merge_sort(t)
t
t=sample(1:5,replace = F)
merge_sort(t)
t
t=
merge_sort(sample(1:10,replace = F))
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:100,replace = F))
merge_sort(sample(1:1000,replace = F))
system.time{merge_sort(sample(1:1000,replace = F))}
system.time(merge_sort(sample(1:1000,replace = F)))
system.time(merge_sort(sample(1:10000,replace = F)))
system.time(merge_sort(sample(1:100000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:500000,replace = F)))
system.time(merge_sort(sample(1:500000,replace = F)))
t=cor.test(x=1:10,y=1:10)
t$estimate
t
t=cor.test(1:10,1:10)
t$statistic
t$estimate
cor_out=data.frame()
UC_matrix_sub_out=list()
?quantile
?cor.test
?diff
?setdiff
A <- c("A", "B", "C", "D")
B <- c("A", "B", "C")
# to find difference
setdiff(A, B)
library(data.table)
?fread
grepl
?grepl
?data.table
?reduece
library(rtracklayer)
?reduce
?grep
source('D:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mainFunctions_sub.R')
?getSeq
?shift
paste0(c("1","2"),c("3","4"))
str_count
library(stringr)
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=("CAG","CCG","AGC")))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")))
data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
t=data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")),"CG")
t
t[,str_count(pattern="CG")]
t[,str_count(ref,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2=t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
rowmeans(t2)
rowMeans(t2)
rowSums(t2)
1318389-5184401
?matchPattern
?matchPattern
dev.off()
library(Gviz)
data(geneModels)
geneModels
typeof(geneModels)
?GeneRegionTrack
TxDb.Mmusculus.UCSC.mm10.knownGene
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
Mus.musculus
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene)
t
?plotTracks
plotTracks(t,chromosome="chr12",from=72365952,to=72366201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72371201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72376201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=15458061 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=164578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154598611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
TxDb.Mmusculus.UCSC.mm10.knownGene
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
genes(TxDb.Mmusculus.UCSC.mm10.knownGene)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , geneSymbol=TRUE)
?plotTracks
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  exonAnnotation = "exon")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Gviz")
columns(txdb)
txdb=TxDb.Mmusculus.UCSC.mm10.knownGene
columns(txdb)
txdb[,"TXNAME"]
ttxdb
txdb
genes(txdb, columns=c("TXID", "TXNAME", "GENEID"))
genes(txdb, columns=c("TXID", "TXNAME", "gene"))
genes(txdb, columns=c("TXID", "TXNAME", "EXONNAME"))
symbol(t)
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE,showId=TRUE)
library(org.Mm.eg.db)
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
gene(txdb)
genes(txdb)
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
mapIds(org.Mm.eg, genes(txdb))
symbols <- unlist(mapIds(org.Mm.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb)$gene_id, "SYMBOL", "ENTREZID", multiVals = "first"))
symbols
symbol(txTranscripts_v1) <- symbols[gene(txTranscripts_v1)]
symbol(t) <- symbols[gene(t)]
t
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
symbol(t)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "symbol")
stars.pval
library(pander)
install.packages('pander')
?strsplit
8.5/11
4/3
3/4
?ecdf
cbindlist
setDT
library(data.table)
setDT
?setDT
cbindlist
data.table::rbindlist
data.table:::cbind.data.table()
?data.table:::cbind.data.table
data.table:::cbind.data.table
400*5000
3000000/5000
seq(1,12,1)/12
seq(1,12,1)/12*100
?max.col
setwd("~/")
source('H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mouse_GO_analysis.R')
25*240*0.1
25+240*0.1
25+240*0.24
492*5725/(226*6730)
226*5725/(492*6730)
1/1.851898
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis")
#create pubMed searching queue based on tissue
#This needs to be run in Windows environment
enhancer_regions=readRDS(enhancer_region_fn)
tissue_sel=names(enhancer_regions)
key_terms=c(
"((craniofacial[Title/Abstract]) OR (face[Title/Abstract]) OR (head[Title/Abstract]))",
"(forebrain[Title/Abstract])",
"(heart[Title/Abstract])",
"(hindbrain[Title/Abstract])",
"(limb[Title/Abstract])",
"(liver[Title/Abstract])",
"(midbrain[Title/Abstract])"
)
names(key_terms)=tissue_sel
source('mainFunctions_sub.R')
#create pubMed searching queue based on tissue
#This needs to be run in Windows environment
enhancer_regions=readRDS(enhancer_region_fn)
tissue_sel=names(enhancer_regions)
key_terms=c(
"((craniofacial[Title/Abstract]) OR (face[Title/Abstract]) OR (head[Title/Abstract]))",
"(forebrain[Title/Abstract])",
"(heart[Title/Abstract])",
"(hindbrain[Title/Abstract])",
"(limb[Title/Abstract])",
"(liver[Title/Abstract])",
"(midbrain[Title/Abstract])"
)
names(key_terms)=tissue_sel
enhancer_regions_motif_dNME_all=list()
enhancer_regions_motif_dMML_all=list()
for(ts in tissue_sel){
cat('Processing:',ts, 'with key:',key_terms[ts],'\n')
tt1=proc.time()[[3]]
GO_in=fread(paste0(gene_example_dir,unique(ts),'.csv'))
enhancer_regions[[ts]]$GO_ID=GO_in[match(enhancer_regions[[ts]]$region,region)]$GO_ID
enhancer_regions_motif=enhancer_regions[[ts]][(!is.na(dNME_motif)|!is.na(dMML_motif))&(!is.na(GO_ID))]
enhancer_regions_motif=enhancer_regions_motif[order(dNME_max_pair,decreasing=T)]
selected_genes=unique(enhancer_regions_motif$gene)
gene_pub_med=do.call(rbind,lapply(selected_genes,pubmed_rec,keys=key_terms[ts]))
if(!is.null(gene_pub_med)){
#maximum countof 300
PMID_unique=unique(gene_pub_med$PMID)
gene_pub_med_collapse=gene_pub_med[,list(PMID=paste(PMID,collapse=";"),title=paste(title,collapse=' ; ')),by=gene]
#Only genes with Pubmed literature
enhancer_regions_motif_dNME=enhancer_regions_motif[!is.na(dNME_motif)]
enhancer_regions_motif_dMML=enhancer_regions_motif[!is.na(dMML_motif)]
enhancer_regions_motif_dNME=cbind(enhancer_regions_motif_dNME,gene_pub_med_collapse[match(enhancer_regions_motif_dNME$gene,gene)])
enhancer_regions_motif_dMML=cbind(enhancer_regions_motif_dMML,gene_pub_med_collapse[match(enhancer_regions_motif_dMML$gene,gene)])
}
else{
enhancer_regions_motif_dNME=enhancer_regions_motif[!is.na(dNME_motif)]
enhancer_regions_motif_dMML=enhancer_regions_motif[!is.na(dMML_motif)]
enhancer_regions_motif_dMML$PMID=NA
enhancer_regions_motif_dNME$PMID=NA
enhancer_regions_motif_dMML$title=NA
enhancer_regions_motif_dNME$title=NA
}
cat("Writing result\n")
write.csv(enhancer_regions_motif_dNME[,list(region,tissue,dNME_motif,cluster,gene,region_type,
dNME_max_pair ,dMML_max_pair,UC_max_time,
UC_max_pair,dNME_cor,
dMML_cor,PMID,title,GO_ID)],
paste0(region_motif_dir,ts,'_dNME_Pubmed_annotated.csv'),
row.names = F,quote=F)
write.csv(enhancer_regions_motif_dMML[,list(region,tissue,dNME_motif,cluster,gene,region_type,
dNME_max_pair ,dMML_max_pair,UC_max_time,
UC_max_pair,dNME_cor,
dMML_cor,PMID,title,GO_ID)],
paste0(region_motif_dir,ts,'_dMML_Pubmed_annotated.csv'),
row.names = F,quote=F)
enhancer_regions_motif_dNME_all[[ts]]=enhancer_regions_motif_dNME
enhancer_regions_motif_dMML_all[[ts]]=enhancer_regions_motif_dMML
}
saveRDS(enhancer_regions_motif_dNME_all,paste0(mouse_motif_dir,'enhancer_regions_motif_dNME_all2.rds'))
saveRDS(enhancer_regions_motif_dMML_all,paste0(mouse_motif_dir,'enhancer_regions_motif_dMML_all2.rds'))
enhancer_regions_motif_dNME_all_old=readRDS(paste0(mouse_motif_dir,'enhancer_regions_motif_dNME_all.rds'))
enhancer_regions_motif_dMML_all_old=readRDS(paste0(mouse_motif_dir,'enhancer_regions_motif_dMML_all.rds'))
enhancer_regions_motif_dNME_all
nrow(enhancer_regions_motif_dNME_all)
nrow(enhancer_regions_motif_dNME_all$EFP)
nrow(enhancer_regions_motif_dNME_all_old$EFP)
enhancer_regions_motif_dNME_all_old$EFP
identical(enhancer_regions_motif_dNME_all_old$EFP$region,enhancer_regions_motif_dNME_all$EFP$region)
?binom.test

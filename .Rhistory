mid_point=round(l/2)
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
}
return(C)
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
merge_sort(sample(1:10,replace = F))
t=sample(1:10,replace = F)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l<=1){
C=x
}else{
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
}
return(C)
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:10,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
# if(i>length(A)){
#   #copy rest B to end of array
#   C=c(C,B[j:length(B)])
# } else if (j>length(B)){
#   #copy rest A to end of array
#   C=c(C,A[i:length(A)])
# }else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
#}
}
return(C)
}
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=sample(1:4,replace = F)
merge_sort(t)
t=sample(1:6,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
t=sample(1:10,replace = F)
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
merge_sort(t)
t
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
merge_sort(t)
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:10,replace = F)
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
t
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=floor(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:5,replace = F)
merge_sort(t)
t
t=sample(1:3,replace = F)
merge_sort(t)
floor(1.5)
merge(1,c(2,3),3)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
return(c(C,B[j:length(B)]))
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
return(c(C,A[i:length(A)]))
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
}
merge(t)
merge(1,c(2,3),3)
merge(1,c(2,3,4),3)
merge(1,c(5,2,3,4),3)
merge_sort(t)
t
t=sample(1:5,replace = F)
merge_sort(t)
t
t=
merge_sort(sample(1:10,replace = F))
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:100,replace = F))
merge_sort(sample(1:1000,replace = F))
system.time{merge_sort(sample(1:1000,replace = F))}
system.time(merge_sort(sample(1:1000,replace = F)))
system.time(merge_sort(sample(1:10000,replace = F)))
system.time(merge_sort(sample(1:100000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:500000,replace = F)))
system.time(merge_sort(sample(1:500000,replace = F)))
t=cor.test(x=1:10,y=1:10)
t$estimate
t
t=cor.test(1:10,1:10)
t$statistic
t$estimate
cor_out=data.frame()
UC_matrix_sub_out=list()
?quantile
?cor.test
?diff
?setdiff
A <- c("A", "B", "C", "D")
B <- c("A", "B", "C")
# to find difference
setdiff(A, B)
library(data.table)
?fread
grepl
?grepl
?data.table
?reduece
library(rtracklayer)
?reduce
?grep
source('D:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mainFunctions_sub.R')
?getSeq
?shift
paste0(c("1","2"),c("3","4"))
str_count
library(stringr)
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=("CAG","CCG","AGC")))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")))
data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
t=data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")),"CG")
t
t[,str_count(pattern="CG")]
t[,str_count(ref,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2=t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
rowmeans(t2)
rowMeans(t2)
rowSums(t2)
1318389-5184401
?matchPattern
?matchPattern
dev.off()
library(Gviz)
data(geneModels)
geneModels
typeof(geneModels)
?GeneRegionTrack
TxDb.Mmusculus.UCSC.mm10.knownGene
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
Mus.musculus
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene)
t
?plotTracks
plotTracks(t,chromosome="chr12",from=72365952,to=72366201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72371201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72376201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=15458061 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=164578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154598611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
TxDb.Mmusculus.UCSC.mm10.knownGene
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
genes(TxDb.Mmusculus.UCSC.mm10.knownGene)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , geneSymbol=TRUE)
?plotTracks
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  exonAnnotation = "exon")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Gviz")
columns(txdb)
txdb=TxDb.Mmusculus.UCSC.mm10.knownGene
columns(txdb)
txdb[,"TXNAME"]
ttxdb
txdb
genes(txdb, columns=c("TXID", "TXNAME", "GENEID"))
genes(txdb, columns=c("TXID", "TXNAME", "gene"))
genes(txdb, columns=c("TXID", "TXNAME", "EXONNAME"))
symbol(t)
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE,showId=TRUE)
library(org.Mm.eg.db)
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
gene(txdb)
genes(txdb)
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
mapIds(org.Mm.eg, genes(txdb))
symbols <- unlist(mapIds(org.Mm.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb)$gene_id, "SYMBOL", "ENTREZID", multiVals = "first"))
symbols
symbol(txTranscripts_v1) <- symbols[gene(txTranscripts_v1)]
symbol(t) <- symbols[gene(t)]
t
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
symbol(t)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "symbol")
stars.pval
library(pander)
install.packages('pander')
?strsplit
8.5/11
4/3
3/4
?ecdf
cbindlist
setDT
library(data.table)
setDT
?setDT
cbindlist
data.table::rbindlist
data.table:::cbind.data.table()
?data.table:::cbind.data.table
data.table:::cbind.data.table
400*5000
3000000/5000
seq(1,12,1)/12
seq(1,12,1)/12*100
?max.col
setwd("~/")
source('H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mouse_GO_analysis.R')
25*240*0.1
25+240*0.1
25+240*0.24
492*5725/(226*6730)
226*5725/(492*6730)
1/1.851898
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis")
source('H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mainFunctions_sub.R')
# Find number of overlapped regions ---------------------------------------
GR_merge=readRDS(GR_merge_file)
#Only use merged data for H1
dMML=sum(GR_merge$dMML_pval<=pval_cutoff)
dNME=sum(GR_merge$dNME_pval<=pval_cutoff)
dMML_dNME=sum(GR_merge$dNME_pval<=pval_cutoff&GR_merge$dMML_pval<=pval_cutoff)
36*4-5
rm(list=ls())
source('mainFunctions_sub.R')
NME_only=readRDS('../downstream/output/human_analysis/motif_analysis/dNME_all.rds')
NME_only
NME_only[FDR<=0.1]
NME_only[FDR<=0.1&proportion>0.5]
NME_only[FDR<=0.1&Proportion>0.5]
NME_only[FDR<=0.1&Proportion<0.5]
motif_dir_dNME=redRDS('../downstream/output/human_analysis/motif_analysis/dNME_all.rds')
write.csv(motif_dir_dNME[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/table1_motif_prefer_high_NME.csv')
motif_dir_dNME=readRDS('../downstream/output/human_analysis/motif_analysis/dNME_all.rds')
write.csv(motif_dir_dNME[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/table1_motif_prefer_high_NME.csv')
write.csv(motif_dir_dNME[FDR<=0.1&Proportion<0.5,list(TF,Proportion=1-Proportion,`Pvalue`,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/table2_motif_prefer_low_NME.csv')
nrow(motif_dir_dNME[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)])
nrow(motif_dir_dNME[FDR<=0.1&Proportion<0.5,list(TF,Proportion,Pvalue,FDR)])
motif_dir_dMML=readRDS('../downstream/output/human_analysis/motif_analysis/dMML_all.rds')
write.csv(motif_dir[FDR<=0.1&Proportion<0.5,list(TF,Proportion=1-Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/tablS1_motif_prefer_low_MML.csv')
write.csv(motif_dir[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/tableS2_motif_prefer_high_MML.csv')
write.csv(motif_dir_dMML[FDR<=0.1&Proportion<0.5,list(TF,Proportion=1-Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/tablS1_motif_prefer_low_MML.csv')
write.csv(motif_dir_dMML[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)], row.names =F,
'../downstream/output/graphs/motif_preference_table/All_regions/tableS2_motif_prefer_high_MML.csv')
nrow()
nrow(motif_dir_dMML[FDR<=0.1&Proportion<0.5,list(TF,Proportion=1-Proportion,Pvalue,FDR)])
nrow(motif_dir_dMML[FDR<=0.1&Proportion>0.5,list(TF,Proportion,Pvalue,FDR)])
NME_in=readRDS('../downstream/output/human_analysis/NME_agnostic_ASM.rds')
NME_in=readRDS('../downstream/output/human_analysis/CPEL_inputs/NME_agnostic_ASM.rds')
NME_in=readRDS('../downstream/output/human_analysis/CPEL_outputs/NME_agnostic_ASM.rds')
NME_in
subsetByOverlaps(NME_in,GRanges(start='chr14',ranges=IRanges(104566670,104566870)),type='equal')
subsetByOverlaps(NME_in,GRanges(seqnames='chr14',ranges=IRanges(104566670,104566870)),type='equal')
subsetByOverlaps(NME_in,GRanges(seqnames='chr6',ranges=IRanges(144329572,144329772)),type='equal')
subsetByOverlaps(NME_in,GRanges(seqnames='chr11',ranges=IRanges(2720817,2721033)),type='equal')
subsetByOverlaps(NME_in,GRanges(seqnames='chr9',ranges=IRanges(4023395,4023595)),type='equal')
subsetByOverlaps(NME_in,GRanges(seqnames='chr11',ranges=IRanges(2720817,2721033)),type='equal')
MML_in=readRDS('../downstream/output/human_analysis/MML_agnostic_ASM.rds')
MML_in=readRDS('../downstream/output/human_analysis/CPEL_outputs/MML_agnostic_ASM.rds')
subsetByOverlaps(MML_in,GRanges(seqnames='chr11',ranges=IRanges(2720817,2721033)),type='equal')
subsetByOverlaps(MML_in,GRanges(seqnames='chr11',ranges=IRanges(2720817,2721033)))

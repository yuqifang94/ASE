###Reading in data
variant_HetCpG_meta=readRDS(variant_HetCpG_meta_file)
# motif_gene=fastDoCall('c',lapply(dir('../downstream/input/JASPAR_out/'),function(x){
#   cat(x,'\n')
#   readRDS(paste0('../downstream/input/JASPAR_out/',x))
#
# }))
# saveRDS(motif_gene,motif_gene_file)
motif_gene <- readRDS(motif_gene_file)#See motif_break_array.R, default setting
selected_features=c("CpG island","CpG shore","CpG shelf","CpG open sea","gene body","exon","intron","intergenic","promoter","TSS")
motif_prefer_high_NME=fread('../downstream/output/graphs/motif_preference_table/All_regions/table1_motif_prefer_high_NME.csv')
motif_gene_high_NME=motif_gene[motif_gene$geneSymbol%in% motif_prefer_high_NME$TF]
variant_HetCpG_meta_dNME_ASM=variant_HetCpG_meta[variant_HetCpG_meta$dNME_pval<=pval_cutoff]
variant_HetCpG_meta_dNME_ASM$region=paste0(seqnames(variant_HetCpG_meta_dNME_ASM),":",start(variant_HetCpG_meta_dNME_ASM))
motif_gene_high_NME$region=paste0(seqnames(motif_gene_high_NME),':',start(motif_gene_high_NME))
# variant_HetCpG_meta_dNME_ASM_motif=variant_HetCpG_meta_dNME_ASM[variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
# dNME_ASM_non_motif=variant_HetCpG_meta_dNME_ASM[!variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
#Extract motif binding regions
ah = AnnotationHub()
chromHMM_state=ENCODE_to_sample(unique(variant_HetCpG_meta$Sample))
chromHMM_list=list()
suppressMessages({for (sp in chromHMM_state$sample[!is.na(chromHMM_state$ENCODE)]){
ah_num=names(query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
chromHMM_list[[sp]]=ah[[ah_num]]
# }
}
})
cont_out_df=data.table()
chromHMM_motif_all_TF=data.table()
genomic_features_OR_out=data.table()
OR_cont_table=list()
for(TF in unique(motif_gene_high_NME$geneSymbol)){
OR_cont_table[[TF]]=data.table()
#ALT-REF
motif_gene_high_NME_TF=motif_gene_high_NME[motif_gene_high_NME$geneSymbol==TF]
variant_dNME_ASM_TF=variant_HetCpG_meta_dNME_ASM
variant_dNME_ASM_TF$allele_diff=0
olap=findOverlaps(variant_dNME_ASM_TF,motif_gene_high_NME_TF)
variant_dNME_ASM_TF[queryHits(olap)]$allele_diff=motif_gene_high_NME_TF[subjectHits(olap)]$alleleDiff
variant_dNME_ASM_TF$allele_diff_NME=variant_dNME_ASM_TF$altNME-variant_dNME_ASM_TF$refNME
#Fit the function
variant_dNME_ASM_TF$ASM="No"
variant_dNME_ASM_TF$ASM[sign(variant_dNME_ASM_TF$allele_diff_NME)==sign(variant_dNME_ASM_TF$allele_diff)]="Yes"
genomic_features_OR=data.table()
for(ft in selected_features){
OR_feature=NULL
OR_feature=testEnrichmentFeature_stat(variant_dNME_ASM_TF,genomic_features[[ft]],output_ft=1)
if(!is.null(OR_feature)){
OR_feature[[1]]$feature=ft
OR_cont_table[[TF]]=rbind(OR_cont_table[[TF]],OR_feature[[1]])
OR_feature=OR_feature[[2]]
genomic_features_OR=rbind(genomic_features_OR,
data.table(feature=ft,OR_feature=OR_feature$estimate,p_value=OR_feature$p.value,
lower_CI=OR_feature$conf.int[1],upper_CI=OR_feature$conf.int[2])
)
}
}
if(nrow(genomic_features_OR)>0){
genomic_features_OR$TF=TF
genomic_features_OR_out=rbind(genomic_features_OR_out,genomic_features_OR)
}
#Get samples for chromHMM analysis
sample_chromHMM=names(table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample))[table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)>=5]
chromHMM_ls=list()
for(sp in sample_chromHMM){
chromHMM_in=chromHMM_list[[sp]]
count_table=list()
out_df=data.table()
for(st in unique(chromHMM_in$name)){
OR_chromHMM=NULL
OR_chromHMM=testEnrichmentFeature_stat(variant_dNME_ASM_TF,chromHMM_in[chromHMM_in$name==st],output_ft=1)
if(!is.null(OR_chromHMM)){
count_table[[st]]=OR_chromHMM[[1]]
OR_chromHMM=OR_chromHMM[[2]]
out_df=rbind(out_df,
data.table(state=st,OR=OR_chromHMM$estimate,p_value=OR_chromHMM$p.value,
lower_CI=OR_chromHMM$conf.int[1],upper_CI=OR_chromHMM$conf.int[2]))
}
}
out_df$Sample=sp
chromHMM_ls[[sp]]=list(out_df,count_table)
}
if(length(chromHMM_ls)>0){chromHMM_motif_all=chromHMM_combine(chromHMM_ls)}
if(nrow(chromHMM_motif_all)>0){
chromHMM_motif_all$TF=TF
out_df$TF=TF
cont_out_df=rbind(cont_out_df,out_df)
chromHMM_motif_all_TF=rbind(chromHMM_motif_all_TF,chromHMM_motif_all)
}
cat("Finish TF:",TF,'\n')
}
chromHMM_motif_all_TF$FDR=p.adjust(chromHMM_motif_all_TF$p_value,method="BH")
genomic_features_OR$FDR=p.adjust(genomic_features_OR$pvalue,method='BH')
genomic_features=readRDS(genomic_features_file)
cont_out_df=data.table()
chromHMM_motif_all_TF=data.table()
genomic_features_OR_out=data.table()
OR_cont_table=list()
for(TF in unique(motif_gene_high_NME$geneSymbol)){
OR_cont_table[[TF]]=data.table()
#ALT-REF
motif_gene_high_NME_TF=motif_gene_high_NME[motif_gene_high_NME$geneSymbol==TF]
variant_dNME_ASM_TF=variant_HetCpG_meta_dNME_ASM
variant_dNME_ASM_TF$allele_diff=0
olap=findOverlaps(variant_dNME_ASM_TF,motif_gene_high_NME_TF)
variant_dNME_ASM_TF[queryHits(olap)]$allele_diff=motif_gene_high_NME_TF[subjectHits(olap)]$alleleDiff
variant_dNME_ASM_TF$allele_diff_NME=variant_dNME_ASM_TF$altNME-variant_dNME_ASM_TF$refNME
#Fit the function
variant_dNME_ASM_TF$ASM="No"
variant_dNME_ASM_TF$ASM[sign(variant_dNME_ASM_TF$allele_diff_NME)==sign(variant_dNME_ASM_TF$allele_diff)]="Yes"
genomic_features_OR=data.table()
for(ft in selected_features){
OR_feature=NULL
OR_feature=testEnrichmentFeature_stat(variant_dNME_ASM_TF,genomic_features[[ft]],output_ft=1)
if(!is.null(OR_feature)){
OR_feature[[1]]$feature=ft
OR_cont_table[[TF]]=rbind(OR_cont_table[[TF]],OR_feature[[1]])
OR_feature=OR_feature[[2]]
genomic_features_OR=rbind(genomic_features_OR,
data.table(feature=ft,OR_feature=OR_feature$estimate,p_value=OR_feature$p.value,
lower_CI=OR_feature$conf.int[1],upper_CI=OR_feature$conf.int[2])
)
}
}
if(nrow(genomic_features_OR)>0){
genomic_features_OR$TF=TF
genomic_features_OR_out=rbind(genomic_features_OR_out,genomic_features_OR)
}
#Get samples for chromHMM analysis
sample_chromHMM=names(table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample))[table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)>=5]
chromHMM_ls=list()
for(sp in sample_chromHMM){
chromHMM_in=chromHMM_list[[sp]]
count_table=list()
out_df=data.table()
for(st in unique(chromHMM_in$name)){
OR_chromHMM=NULL
OR_chromHMM=testEnrichmentFeature_stat(variant_dNME_ASM_TF,chromHMM_in[chromHMM_in$name==st],output_ft=1)
if(!is.null(OR_chromHMM)){
count_table[[st]]=OR_chromHMM[[1]]
OR_chromHMM=OR_chromHMM[[2]]
out_df=rbind(out_df,
data.table(state=st,OR=OR_chromHMM$estimate,p_value=OR_chromHMM$p.value,
lower_CI=OR_chromHMM$conf.int[1],upper_CI=OR_chromHMM$conf.int[2]))
}
}
out_df$Sample=sp
chromHMM_ls[[sp]]=list(out_df,count_table)
}
if(length(chromHMM_ls)>0){chromHMM_motif_all=chromHMM_combine(chromHMM_ls)}
if(nrow(chromHMM_motif_all)>0){
chromHMM_motif_all$TF=TF
out_df$TF=TF
cont_out_df=rbind(cont_out_df,out_df)
chromHMM_motif_all_TF=rbind(chromHMM_motif_all_TF,chromHMM_motif_all)
}
cat("Finish TF:",TF,'\n')
}
chromHMM_motif_all_TF
genomic_features_OR_out
chromHMM_motif_all_TF
OR_cont_table
genomic_features_OR_out
chromHMM_motif_all
chromHMM_motif_all_TF
chromHMM_ls
sample_chromHMM
variant_dNME_ASM_TF
names(table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample))[table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)>=5]
table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)
TF
unique(motif_gene_high_NME$geneSymbol)
table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)
cont_out_df=data.table()
chromHMM_motif_all_TF=data.table()
genomic_features_OR_out=data.table()
OR_cont_table=list()
sample_chromHMM=list()
for(TF in unique(motif_gene_high_NME$geneSymbol)){
OR_cont_table[[TF]]=data.table()
#ALT-REF
motif_gene_high_NME_TF=motif_gene_high_NME[motif_gene_high_NME$geneSymbol==TF]
variant_dNME_ASM_TF=variant_HetCpG_meta_dNME_ASM
variant_dNME_ASM_TF$allele_diff=0
olap=findOverlaps(variant_dNME_ASM_TF,motif_gene_high_NME_TF)
variant_dNME_ASM_TF[queryHits(olap)]$allele_diff=motif_gene_high_NME_TF[subjectHits(olap)]$alleleDiff
variant_dNME_ASM_TF$allele_diff_NME=variant_dNME_ASM_TF$altNME-variant_dNME_ASM_TF$refNME
#Fit the function
variant_dNME_ASM_TF$ASM="No"
variant_dNME_ASM_TF$ASM[sign(variant_dNME_ASM_TF$allele_diff_NME)==sign(variant_dNME_ASM_TF$allele_diff)]="Yes"
genomic_features_OR=data.table()
for(ft in selected_features){
OR_feature=NULL
OR_feature=testEnrichmentFeature_stat(variant_dNME_ASM_TF,genomic_features[[ft]],output_ft=1)
if(!is.null(OR_feature)){
OR_feature[[1]]$feature=ft
OR_cont_table[[TF]]=rbind(OR_cont_table[[TF]],OR_feature[[1]])
OR_feature=OR_feature[[2]]
genomic_features_OR=rbind(genomic_features_OR,
data.table(feature=ft,OR_feature=OR_feature$estimate,p_value=OR_feature$p.value,
lower_CI=OR_feature$conf.int[1],upper_CI=OR_feature$conf.int[2])
)
}
}
if(nrow(genomic_features_OR)>0){
genomic_features_OR$TF=TF
genomic_features_OR_out=rbind(genomic_features_OR_out,genomic_features_OR)
}
#Get samples for chromHMM analysis
sample_chromHMM[[TF]]=table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)
chromHMM_ls=list()
for(sp in unique(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)){
chromHMM_in=chromHMM_list[[sp]]
count_table=list()
out_df=data.table()
for(st in unique(chromHMM_in$name)){
OR_chromHMM=NULL
OR_chromHMM=testEnrichmentFeature_stat(variant_dNME_ASM_TF,chromHMM_in[chromHMM_in$name==st],output_ft=1)
if(!is.null(OR_chromHMM)){
count_table[[st]]=OR_chromHMM[[1]]
OR_chromHMM=OR_chromHMM[[2]]
out_df=rbind(out_df,
data.table(state=st,OR=OR_chromHMM$estimate,p_value=OR_chromHMM$p.value,
lower_CI=OR_chromHMM$conf.int[1],upper_CI=OR_chromHMM$conf.int[2]))
}
}
out_df$Sample=sp
chromHMM_ls[[sp]]=list(out_df,count_table)
}
if(length(chromHMM_ls)>0){chromHMM_motif_all=chromHMM_combine(chromHMM_ls)}
if(nrow(chromHMM_motif_all)>0){
chromHMM_motif_all$TF=TF
out_df$TF=TF
cont_out_df=rbind(cont_out_df,out_df)
chromHMM_motif_all_TF=rbind(chromHMM_motif_all_TF,chromHMM_motif_all)
}
cat("Finish TF:",TF,'\n')
}
chromHMM_motif_all_TF
sp
chromHMM_ls
out_df
OR_chromHMM
OR_chromHMM
chromHMM_in
chromHMM_list
# variant_HetCpG_meta_dNME_ASM_motif=variant_HetCpG_meta_dNME_ASM[variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
# dNME_ASM_non_motif=variant_HetCpG_meta_dNME_ASM[!variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
#Extract motif binding regions
ah = AnnotationHub()
chromHMM_state=ENCODE_to_sample(unique(variant_HetCpG_meta$Sample))
chromHMM_list=list()
suppressMessages({for (sp in chromHMM_state$sample[!is.na(chromHMM_state$ENCODE)]){
ah_num=names(query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
chromHMM_list[[sp]]=ah[[ah_num]]
# }
}
})
cont_out_df=data.table()
# variant_HetCpG_meta_dNME_ASM_motif=variant_HetCpG_meta_dNME_ASM[variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
# dNME_ASM_non_motif=variant_HetCpG_meta_dNME_ASM[!variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
#Extract motif binding regions
ah = AnnotationHub()
chromHMM_state=ENCODE_to_sample(unique(variant_HetCpG_meta$Sample))
chromHMM_list=list()
suppressMessages({for (sp in chromHMM_state$sample[!is.na(chromHMM_state$ENCODE)]){
ah_num=names(query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
chromHMM_list[[sp]]=ah[[ah_num]]
# }
}
})
chromHMM_state
chromHMM_list
query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp]))
library(AnnotationHub)
query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp]))
ah
# variant_HetCpG_meta_dNME_ASM_motif=variant_HetCpG_meta_dNME_ASM[variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
# dNME_ASM_non_motif=variant_HetCpG_meta_dNME_ASM[!variant_HetCpG_meta_dNME_ASM$region%in%motif_gene_high_NME_region]
#Extract motif binding regions
ah = AnnotationHub()
chromHMM_state=ENCODE_to_sample(unique(variant_HetCpG_meta$Sample))
chromHMM_list=list()
suppressMessages({for (sp in chromHMM_state$sample[!is.na(chromHMM_state$ENCODE)]){
ah_num=names(query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
chromHMM_list[[sp]]=ah[[ah_num]]
# }
}
})
chromHMM_state$ENCODE[chromHMM_state$sample==sp]
?query
ah_num=names(AnnotationHub::query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
suppressMessages({for (sp in chromHMM_state$sample[!is.na(chromHMM_state$ENCODE)]){
ah_num=names(AnnotationHub::query(ah, c("chromhmmSegmentations", chromHMM_state$ENCODE[chromHMM_state$sample==sp])))
chromHMM_list[[sp]]=ah[[ah_num]]
# }
}
})
chromHMM_list
cont_out_df=data.table()
chromHMM_motif_all_TF=data.table()
genomic_features_OR_out=data.table()
OR_cont_table=list()
for(TF in unique(motif_gene_high_NME$geneSymbol)){
OR_cont_table[[TF]]=data.table()
#ALT-REF
motif_gene_high_NME_TF=motif_gene_high_NME[motif_gene_high_NME$geneSymbol==TF]
variant_dNME_ASM_TF=variant_HetCpG_meta_dNME_ASM
variant_dNME_ASM_TF$allele_diff=0
olap=findOverlaps(variant_dNME_ASM_TF,motif_gene_high_NME_TF)
variant_dNME_ASM_TF[queryHits(olap)]$allele_diff=motif_gene_high_NME_TF[subjectHits(olap)]$alleleDiff
variant_dNME_ASM_TF$allele_diff_NME=variant_dNME_ASM_TF$altNME-variant_dNME_ASM_TF$refNME
#Fit the function
variant_dNME_ASM_TF$ASM="No"
variant_dNME_ASM_TF$ASM[sign(variant_dNME_ASM_TF$allele_diff_NME)==sign(variant_dNME_ASM_TF$allele_diff)]="Yes"
genomic_features_OR=data.table()
for(ft in selected_features){
OR_feature=NULL
OR_feature=testEnrichmentFeature_stat(variant_dNME_ASM_TF,genomic_features[[ft]],output_ft=1)
if(!is.null(OR_feature)){
OR_feature[[1]]$feature=ft
OR_cont_table[[TF]]=rbind(OR_cont_table[[TF]],OR_feature[[1]])
OR_feature=OR_feature[[2]]
genomic_features_OR=rbind(genomic_features_OR,
data.table(feature=ft,OR_feature=OR_feature$estimate,p_value=OR_feature$p.value,
lower_CI=OR_feature$conf.int[1],upper_CI=OR_feature$conf.int[2])
)
}
}
if(nrow(genomic_features_OR)>0){
genomic_features_OR$TF=TF
genomic_features_OR_out=rbind(genomic_features_OR_out,genomic_features_OR)
}
#Get samples for chromHMM analysis
sample_chromHMM[[TF]]=names(table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample))[table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)>=5]
chromHMM_ls=list()
for(sp in sample_chromHMM){
chromHMM_in=chromHMM_list[[sp]]
count_table=list()
out_df=data.table()
for(st in unique(chromHMM_in$name)){
OR_chromHMM=NULL
OR_chromHMM=testEnrichmentFeature_stat(variant_dNME_ASM_TF,chromHMM_in[chromHMM_in$name==st],output_ft=1)
if(!is.null(OR_chromHMM)){
count_table[[st]]=OR_chromHMM[[1]]
OR_chromHMM=OR_chromHMM[[2]]
out_df=rbind(out_df,
data.table(state=st,OR=OR_chromHMM$estimate,p_value=OR_chromHMM$p.value,
lower_CI=OR_chromHMM$conf.int[1],upper_CI=OR_chromHMM$conf.int[2]))
}
}
out_df$Sample=sp
chromHMM_ls[[sp]]=list(out_df,count_table)
}
if(length(chromHMM_ls)>0){chromHMM_motif_all=chromHMM_combine(chromHMM_ls)}
if(nrow(chromHMM_motif_all)>0){
chromHMM_motif_all$TF=TF
out_df$TF=TF
cont_out_df=rbind(cont_out_df,out_df)
chromHMM_motif_all_TF=rbind(chromHMM_motif_all_TF,chromHMM_motif_all)
}
cat("Finish TF:",TF,'\n')
}
chromHMM_list
sp
sample_chromHMM
cont_out_df=data.table()
chromHMM_motif_all_TF=data.table()
genomic_features_OR_out=data.table()
OR_cont_table=list()
for(TF in unique(motif_gene_high_NME$geneSymbol)){
OR_cont_table[[TF]]=data.table()
#ALT-REF
motif_gene_high_NME_TF=motif_gene_high_NME[motif_gene_high_NME$geneSymbol==TF]
variant_dNME_ASM_TF=variant_HetCpG_meta_dNME_ASM
variant_dNME_ASM_TF$allele_diff=0
olap=findOverlaps(variant_dNME_ASM_TF,motif_gene_high_NME_TF)
variant_dNME_ASM_TF[queryHits(olap)]$allele_diff=motif_gene_high_NME_TF[subjectHits(olap)]$alleleDiff
variant_dNME_ASM_TF$allele_diff_NME=variant_dNME_ASM_TF$altNME-variant_dNME_ASM_TF$refNME
#Fit the function
variant_dNME_ASM_TF$ASM="No"
variant_dNME_ASM_TF$ASM[sign(variant_dNME_ASM_TF$allele_diff_NME)==sign(variant_dNME_ASM_TF$allele_diff)]="Yes"
genomic_features_OR=data.table()
for(ft in selected_features){
OR_feature=NULL
OR_feature=testEnrichmentFeature_stat(variant_dNME_ASM_TF,genomic_features[[ft]],output_ft=1)
if(!is.null(OR_feature)){
OR_feature[[1]]$feature=ft
OR_cont_table[[TF]]=rbind(OR_cont_table[[TF]],OR_feature[[1]])
OR_feature=OR_feature[[2]]
genomic_features_OR=rbind(genomic_features_OR,
data.table(feature=ft,OR_feature=OR_feature$estimate,p_value=OR_feature$p.value,
lower_CI=OR_feature$conf.int[1],upper_CI=OR_feature$conf.int[2])
)
}
}
if(nrow(genomic_features_OR)>0){
genomic_features_OR$TF=TF
genomic_features_OR_out=rbind(genomic_features_OR_out,genomic_features_OR)
}
#Get samples for chromHMM analysis
sample_chromHMM=names(table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample))[table(variant_dNME_ASM_TF[variant_dNME_ASM_TF$ASM=="Yes"]$Sample)>=5]
chromHMM_ls=list()
for(sp in sample_chromHMM){
chromHMM_in=chromHMM_list[[sp]]
count_table=list()
out_df=data.table()
for(st in unique(chromHMM_in$name)){
OR_chromHMM=NULL
OR_chromHMM=testEnrichmentFeature_stat(variant_dNME_ASM_TF,chromHMM_in[chromHMM_in$name==st],output_ft=1)
if(!is.null(OR_chromHMM)){
count_table[[st]]=OR_chromHMM[[1]]
OR_chromHMM=OR_chromHMM[[2]]
out_df=rbind(out_df,
data.table(state=st,OR=OR_chromHMM$estimate,p_value=OR_chromHMM$p.value,
lower_CI=OR_chromHMM$conf.int[1],upper_CI=OR_chromHMM$conf.int[2]))
}
}
out_df$Sample=sp
chromHMM_ls[[sp]]=list(out_df,count_table)
}
if(length(chromHMM_ls)>0){chromHMM_motif_all=chromHMM_combine(chromHMM_ls)}
if(nrow(chromHMM_motif_all)>0){
chromHMM_motif_all$TF=TF
out_df$TF=TF
cont_out_df=rbind(cont_out_df,out_df)
chromHMM_motif_all_TF=rbind(chromHMM_motif_all_TF,chromHMM_motif_all)
}
cat("Finish TF:",TF,'\n')
}
chromHMM_motif_all_TF$FDR=p.adjust(chromHMM_motif_all_TF$p_value,method="BH")
genomic_features_OR$FDR=p.adjust(genomic_features_OR$pvalue,method='BH')
chromHMM_motif_all_TF
genomic_features_OR
genomic_features_OR_out$FDR=p.adjust(genomic_features_OR$pvalue,method='BH')
genomic_features_OR_out
saveRDS(chromHMM_motif_all_TF,'../downstream/output/chromHMM_motif_all_TF.rds')
saveRDS(genomic_features_OR_out,'../downstream/output/genomic_features_OR_motif.rds')
OR_cont_table
saveRDS(OR_cont_table,'../downstream/output/OR_cont_table_motif.rds')
genomic_features_OR_out_sig=genomic_features_OR_out[FDR<=0.1]
genomic_features_OR_out_sig
genomic_features_OR_out
genomic_features_OR_out$FDR=p.adjust(genomic_features_OR$p_value,method='BH')
genomic_features_OR_out$FDR=p.adjust(genomic_features_OR_out$p_value,method='BH')
saveRDS(genomic_features_OR_out,'../downstream/output/genomic_features_OR_motif.rds')
genomic_features_OR_out_sig=genomic_features_OR_out[FDR<=0.1]
GR_merge=readRDS(GR_merge_file)
GR_merge
min(GR_merge$N)
table(GR_merge$Sample)
saveRDS(CpG_hg19,'../downstream/input/CpG_hg19.rds')
CpG_hg19=readRDS('../downstream/input/CpG_hg19.rds')
CpG_hg19
GR=readRDS(GR_file)
GR
table(GR$Sample)
table(GR$Sample[GR$Statistic=='dMML'])
genomic_features_OR_out_sig
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature))+geom_bar()
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature))+geom_bar(stat ='identity')
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,color=feature))+geom_bar(stat ='identity')
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fiil=feature))+geom_bar(stat ='identity')
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+geom_bar(stat ='identity')
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme_glob
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())+ylab("OR"+)
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())+ylab("OR")+
theme_glob+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
pdf("../downstream/output/OR_motif_preference.pdf",width=9,height=3)
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())+ylab("OR")+
theme_glob+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
chromHMM_motif_all_TF_sig
chromHMM_motif_all_TF_sig=chromHMM_motif_all_TF[FDR<=0.1&OR>=2]
chromHMM_motif_all_TF_sig_heatmap=dcast.data.table(chromHMM_motif_all_TF[TF%in%chromHMM_motif_all_TF_sig$TF],states~TF,value.var = "OR")
chromHMM_motif_all_TF_sig_FDR=as.matrix(dcast.data.table(chromHMM_motif_all_TF[TF%in%chromHMM_motif_all_TF_sig$TF],states~TF,value.var = "FDR")[,-1])
chromHMM_motif_all_TF_sig_FDR[chromHMM_motif_all_TF_sig_FDR <= 0.1]="*"
chromHMM_motif_all_TF_sig_FDR[chromHMM_motif_all_TF_sig_FDR > 0.1]=""
heatmap_mt=as.matrix(chromHMM_motif_all_TF_sig_heatmap[,-1])
rownames(heatmap_mt)=chromHMM_motif_all_TF_sig_heatmap$states
breaksList=seq(0,3,0.05)
heatmap_col=colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(length(breaksList))
pdf('../downstream/output/chromHMM_SNP_feature.pdf')
pheatmap(t(heatmap_mt),cluster_cols = F,cluster_rows = F,display_numbers=t(chromHMM_motif_all_TF_sig_FDR),
color=heatmap_col,breaks = breaksList)
dev.off()
dev.off()
pdf("../downstream/output/OR_motif_preference.pdf",width=9,height=4)
ggplot(genomic_features_OR_out_sig,aes(x=TF,y=OR_feature,group=feature,fill=feature))+
geom_bar(stat ='identity',position=position_dodge())+ylab("OR")+
theme_glob+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
pdf('../downstream/output/chromHMM_SNP_feature.pdf')
pheatmap(t(heatmap_mt),cluster_cols = F,cluster_rows = F,display_numbers=t(chromHMM_motif_all_TF_sig_FDR),
color=heatmap_col,breaks = breaksList)
dev.off()
t=readRDS('../downstream/input/motif_target/EFP_motif_site_dNME.rds')
chromHMM=readRDS('../downstream/output/chromHMM_enhancer.rds')
t
chromHMM
subsetByOverlaps(t$MA0039.4_KLF4,chromHMM,type='equal')
subsetByOverlaps(t$MA0039.4_KLF4,chromHMM)
t$MA0039.4_KLF4
t=readRDS(NME_agnostic_file)
t

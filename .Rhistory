merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
merge_sort(t)
source('D:/Dropbox/JHU/corsera/corsesra.R')
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=round(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
t
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t=sample(1:5,replace = F)
merge_sort(t)
t
#merge sort
merge_sort<-function(x){
l=length(x)
if(l>1){
#A 1st sorted array
#B 2nd sorted array
mid_point=floor(l/2)
cat('A in:',x[1:mid_point],'\n' )
A=merge_sort(x[1:mid_point])
B=merge_sort(x[(mid_point+1):l])
C=merge(A,B,l)
cat('C:',C,'\n')
return(C)
}else{
return(x)
}
}
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
C=c(C,B[j:length(B)])
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
C=c(C,A[i:length(A)])
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
return(C)
}
t=sample(1:5,replace = F)
merge_sort(t)
t
t=sample(1:3,replace = F)
merge_sort(t)
floor(1.5)
merge(1,c(2,3),3)
merge<-function(A,B,l){
C=c()#output array
#merge step
i=1
j=1
for(k in 1:l){
#end case A finishing
if(i>length(A)&j<=length(B)){
#copy rest B to end of array
return(c(C,B[j:length(B)]))
} else if (j>length(B)&i<=length(A)){
#copy rest A to end of array
return(c(C,A[i:length(A)]))
}else{
if(A[i]<B[j]){
C[k]=A[i]
i=i+1
}else{
C[k]=B[j]
j=j+1
}
}
}
}
merge(t)
merge(1,c(2,3),3)
merge(1,c(2,3,4),3)
merge(1,c(5,2,3,4),3)
merge_sort(t)
t
t=sample(1:5,replace = F)
merge_sort(t)
t
t=
merge_sort(sample(1:10,replace = F))
source('D:/Dropbox/JHU/corsera/corsesra.R')
t=
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:10,replace = F))
merge_sort(sample(1:100,replace = F))
merge_sort(sample(1:1000,replace = F))
system.time{merge_sort(sample(1:1000,replace = F))}
system.time(merge_sort(sample(1:1000,replace = F)))
system.time(merge_sort(sample(1:10000,replace = F)))
system.time(merge_sort(sample(1:100000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(merge_sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:50000,replace = F)))
system.time(sort(sample(1:500000,replace = F)))
system.time(merge_sort(sample(1:500000,replace = F)))
t=cor.test(x=1:10,y=1:10)
t$estimate
t
t=cor.test(1:10,1:10)
t$statistic
t$estimate
cor_out=data.frame()
UC_matrix_sub_out=list()
?quantile
?cor.test
?diff
?setdiff
A <- c("A", "B", "C", "D")
B <- c("A", "B", "C")
# to find difference
setdiff(A, B)
library(data.table)
?fread
grepl
?grepl
?data.table
?reduece
library(rtracklayer)
?reduce
?grep
source('D:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mainFunctions_sub.R')
?getSeq
?shift
paste0(c("1","2"),c("3","4"))
str_count
library(stringr)
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=("CAG","CCG","AGC")))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")))
data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
t=data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC"))
str_count(data.table(ref=c("CCG","CGC","ATC"),alt=c("CAG","CCG","AGC")),"CG")
t
t[,str_count(pattern="CG")]
t[,str_count(ref,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG")]
t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
t2=t[,.(str_count(ref,pattern="CG"),str_count(alt,pattern="CG"))]
rowmeans(t2)
rowMeans(t2)
rowSums(t2)
1318389-5184401
?matchPattern
?matchPattern
dev.off()
library(Gviz)
data(geneModels)
geneModels
typeof(geneModels)
?GeneRegionTrack
TxDb.Mmusculus.UCSC.mm10.knownGene
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
Mus.musculus
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene)
t
?plotTracks
plotTracks(t,chromosome="chr12",from=72365952,to=72366201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72371201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr12",from=72360952,to=72376201 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=15458061 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154574062,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154576611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=164578611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154573362,to=154598611 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
TxDb.Mmusculus.UCSC.mm10.knownGene
TxDb.Mmusculus.UCSC.mm10.knownGene
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
genes(TxDb.Mmusculus.UCSC.mm10.knownGene)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , transcriptAnnotation = "symbol")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 , geneSymbol=TRUE)
?plotTracks
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  exonAnnotation = "exon")
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Gviz")
columns(txdb)
txdb=TxDb.Mmusculus.UCSC.mm10.knownGene
columns(txdb)
txdb[,"TXNAME"]
ttxdb
txdb
genes(txdb, columns=c("TXID", "TXNAME", "GENEID"))
genes(txdb, columns=c("TXID", "TXNAME", "gene"))
genes(txdb, columns=c("TXID", "TXNAME", "EXONNAME"))
symbol(t)
t=GeneRegionTrack(TxDb.Mmusculus.UCSC.mm10.knownGene,geneSymbol=TRUE,showId=TRUE)
library(org.Mm.eg.db)
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, gene(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
gene(txdb)
genes(txdb)
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
mapIds(org.Mm.eg, genes(txdb))
symbols <- unlist(mapIds(org.Mm.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb), "SYMBOL", "ENTREZID", multiVals = "first"))
symbols <- unlist(mapIds(org.Mm.eg.db, genes(txdb)$gene_id, "SYMBOL", "ENTREZID", multiVals = "first"))
symbols
symbol(txTranscripts_v1) <- symbols[gene(txTranscripts_v1)]
symbol(t) <- symbols[gene(t)]
t
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "transcript")
symbol(t)
plotTracks(t,chromosome="chr2",from=154557400,to=154571892 ,  transcriptAnnotation = "symbol")
stars.pval
library(pander)
install.packages('pander')
?strsplit
8.5/11
4/3
3/4
?ecdf
cbindlist
setDT
library(data.table)
setDT
?setDT
cbindlist
data.table::rbindlist
data.table:::cbind.data.table()
?data.table:::cbind.data.table
data.table:::cbind.data.table
400*5000
3000000/5000
seq(1,12,1)/12
seq(1,12,1)/12*100
?max.col
setwd("~/")
source('H:/Dropbox/JHU/Projects/Allele-spcific/code/HASM-MetaAnalysis/mouse_GO_analysis.R')
25*240*0.1
25+240*0.1
25+240*0.24
492*5725/(226*6730)
226*5725/(492*6730)
1/1.851898
seq(0.001,1,0.001)
PACKAGE_MAINFOLDER
$R_HOME
help("Rprofile")
Sys.getenv(x = "PACKAGE_MAINFOLDER", unset = "", names = NA)
Sys.getenv("R_PROFILE")
Sys.getenv("R_HOME")
Sys.getenv("R_PROFILE_USER")
Sys.getenv()
options(HOME="C:\\Users\\vince\\Documents")
options(HOME="C:/Users/vince/Documents")
Sys.getenv()
Sys.getenv()[1]
gsub('\','\\', Sys.getenv()[1])
gsub("\:,"\\", Sys.getenv()[1])
gsub("\\:,"\\\", Sys.getenv()[1])
gsub("\","\\", Sys.getenv()[1])
gsub("\","\\", Sys.getenv()[1])
gsub("\\\","\\\\", Sys.getenv()[1])
Sys.getenv()[1]
gsub("C","D", Sys.getenv()[1])
gsub("\\\","\\\\", Sys.getenv()[1])
gsub("\\:\","\\\\", Sys.getenv()[1])
gsub("[\\\]","[\\\\]", Sys.getenv()[1])
grepl("[\\\]",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl(""\\\",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\:\",Sys.getenv()[1])
grepl("1",Sys.getenv()[1])
grepl("\\\",Sys.getenv()[1])
grepl("\\",Sys.getenv()[1])
grepl('\'',Sys.getenv()[1])
grepl("\",Sys.getenv()[1],value=T)
grepl("\\\\",Sys.getenv()[1],value=T)
grepl("\\\\",Sys.getenv()[1])
Sys.getenv()[1]
gsub('\\\\','\\\\\',Sys.getenv()[1])
gsub('\\\\','\\/',Sys.getenv()[1])
gsub('\\\\','\\/',Sys.getenv())
gsub('\\\\','\\/',Sys.getenv()[1])
gsub('\\\\','\\\\\\\\',Sys.getenv()[1])
Sys.setenv(gsub('\\\\','\\\\\\\\',Sys.getenv()))
Sys.setenv(gsub('\\\\','\\\\\\\\',Sys.getenv()[1]))
languageserver_install()
install.packages("languageserversetup")
install.packages("languageserversetup")
install.packages("languageserversetup")
languageserversetup::languageserver_install()
languageserversetup::languageserver_add_to_rprofile()
languageserversetup::languageserver_add_to_rprofile()
library(lintr)
library(languageserver)
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/Science_ASE/UC_cutoff_test")
library(shiny); runApp('cutoff_display_Rmarkdown.R')
cutoff_dt=readRDS('../downstream/output/mouse_analysis/UC_dNME_olap/regions_ts_only_tb.rds')
cutoff_dt=readRDS('../downstream/output/mouse_analysis/UC_dNME_olap/regions_ts_only_tb.rds')
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/Science_ASE")
cutoff_dt=readRDS('../downstream/output/mouse_analysis/UC_dNME_olap/regions_ts_only_tb.rds')
WorldPhones
runApp('UC_cutoff_test/cutoff_display.R')
setwd("H:/Dropbox/JHU/Projects/Allele-spcific/code/Science_ASE")
runApp('UC_cutoff_test/cutoff_display.R')
dir('../downstream/output/mouse_analysis/')
dir('../downstream/output/mouse_analysis/UC_dNME_olap')
cutoff_dt=readRDS('../downstream/output/mouse_analysis/UC_dNME_olap/regions_ts_only_tb.rds')
runApp('UC_cutoff_test/cutoff_display.R')
runApp('UC_cutoff_test/cutoff_display.R')
runApp('UC_cutoff_test/cutoff_display.R')
names(cutoff_dt)
runApp('UC_cutoff_test/cutoff_display.R')
runApp('UC_cutoff_test/cutoff_display.R')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
colnames(WorldPhones))
colnames(WorldPhones)
names(cutoff_dt)
runApp('UC_cutoff_test')
cutoff_dt$EFP
dt_in=cutoff_dt$EFP
cutoff_dt
dt_in
dNME_cutoff=0.01
dt_in=cutoff_dt$EFP[dNME_cutoff==0.01&dMML_cutoff==0.01]
dt_in=cutoff_dt$EFP[dNME_cutoff==0.01&dMML_cutoff==0.01]
cutoff_dt$EFP
library(data.table)
library(data.table)
library(ggplot2)
dt_in=cutoff_dt$EFP[dNME_cutoff==0.01&dMML_cutoff==0.01]
dt_in
dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shraed_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC)]
dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC)]
melt.data.table(dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC)],id.vars='UC')
melt.data.table(dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC)],id.vars='UC',variable.names='stat type')
#Processing data
dt_in=cutoff_dt[[sliderValues$ts]][dNME_cutoff ==sliderValues$dNME_cutoff&dMML_cutoff==sliderValues$dMML_cutoff]
melt.data.table(dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC)],id.vars='UC',variable.name='stat type')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp()
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp()
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
cutoff_dt
cutoff_dt[[ts]]
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
min(NULL)
is.infinite(min(NULL))
runApp('UC_cutoff_test')
dir('../../downstream/output/mouse_analysis/UC_dNME_olap/')
dir('../downstream/output/mouse_analysis/UC_dNME_olap/')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
dt_in
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
cutoff_dt
unique(cutoff_dt$EFP$dNME)
runApp('UC_cutoff_test')
cutoff_dt=readRDS('../../downstream/output/mouse_analysis/UC_dNME_olap/regions_non_ts_only_tb.rds')
cutoff_dt=readRDS('../downstream/output/mouse_analysis/UC_dNME_olap/regions_non_ts_only_tb.rds')
cutoff_dt[dMML==0.35&dNME=0.2]
cutoff_dt[dMML==0.35&dNME==0.2]
cutoff_dt$EFP[dMML==0.35&dNME==0.2]
cutoff_dt$EFP[]
unique(cutoff_dt$EFP$dMML)
unique(cutoff_dt$EFP$dNME)
cutoff_dt[dMML==0.35&dNME==0.2]
cutoff_dt$EFP[dMML==0.35&dNME==0.2]
cutoff_dt$EFP[dMML==0.35]
cutoff_dt$EFP[dMML=="0.35"]
cutoff_dt$EFP[dMML=="0.35"&dNME=="0.2"]
min(cutoff_dt[[input$ts]]$dNME_cutoff)
runApp('UC_cutoff_test')
runApp('UC_cutoff_test')
dt_in_mt= melt.data.table(cutoff_dt[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC,UC_region=UC_specific_dNME+shared_dNME)],id.vars=c('UC','UC_region'),variable.name='data_type')
cutoff_dt
dt_in_mt= melt.data.table(cutoff_dt$EFP[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC,UC_region=UC_specific_dNME+shared_dNME)],id.vars=c('UC','UC_region'),variable.name='data_type')
dt_in=cutoff_dt$EFP[dNME_cutoff == 0.2&dMML_cutoff==0.35]
dt_in
dt_in=cutoff_dt$EFP[dNME_cutoff == "0.2"&dMML_cutoff=="0.35"]
dt_in
cutoff_dt=lapply(cutoff_dt,as.numeric)
runApp('UC_cutoff_test')
dt_in=cutoff_dt$EFP[dNME_cutoff == "0.2"&dMML_cutoff=="0.35"]
dt_in_mt=    melt.data.table(dt_in[,list(dNME= shared_dNME/(shared_dNME+dNME_specific),
dMML=shared_dMML/(shared_dMML+dMML_specific),
`dMML random` = shared_dMML_rand/(shared_dMML_rand+dMML_specific_rand),
`dNME random`=shared_dNME_rand/(shared_dNME_rand+dNME_specific_rand),
UC=UC,UC_region=UC_specific_dNME+shared_dNME)],id.vars=c('UC','UC_region'),variable.name='data_type')
dt_in_mt
ggplot(dt_in_mt,aes(x=UC_region,y=value))+
geom_point(aes(color=data_type),size=2)+
xlab("Number of regions")+ylab("Porportion of overlapped regions")+ylim(c(0,1))+
guides(color=guide_legend(title="",override.aes = list(size=10)))+
geom_vline(xintercept = dt_in_mt()[UC==0.1]$UC_region)+
theme_classic()+theme(plot.title = element_text(hjust = 0.5,size=24),
axis.title.x=element_text(hjust=0.5,size=18,face="bold"),
axis.title.y=element_text(hjust=0.5,size=18,face="bold"),
axis.text.x=element_text(size=16),
axis.text.y=element_text(size=16),
legend.text=element_text(size=16))
ggplot(dt_in_mt,aes(x=UC_region,y=value))+
geom_point(aes(color=data_type),size=2)+
xlab("Number of regions")+ylab("Porportion of overlapped regions")+ylim(c(0,1))+
guides(color=guide_legend(title="",override.aes = list(size=10)))+
geom_vline(xintercept = dt_in_mt[UC==0.1]$UC_region)+
theme_classic()+theme(plot.title = element_text(hjust = 0.5,size=24),
axis.title.x=element_text(hjust=0.5,size=18,face="bold"),
axis.title.y=element_text(hjust=0.5,size=18,face="bold"),
axis.text.x=element_text(size=16),
axis.text.y=element_text(size=16),
legend.text=element_text(size=16))
runApp('UC_cutoff_test')
